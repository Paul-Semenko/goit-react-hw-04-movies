{"version":3,"sources":["pages/Cast/Cast.module.css","pages/Cast/Cast.jsx"],"names":["module","exports","Cast","useState","castDetails","setCastDetails","movie_id","useParams","useEffect","getCastList","getMovieDetailsCast","then","cast","catch","e","toast","className","s","CastGallery","map","id","profile_path","name","character","CastGalleryItem","src","defaultImage","alt","CastGalleryItemImage","NameCast","CharacterCast"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,YAAc,0BAA0B,gBAAkB,8BAA8B,qBAAuB,mCAAmC,SAAW,uBAAuB,cAAgB,8B,gHCqDvMC,UA7CF,WACX,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACQC,EAAaC,cAAbD,SAERE,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAc,WAClBC,YAAoBJ,EAAU,WAC3BK,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAAeO,MAClCC,OAAM,SAACC,GAAD,OAAOC,YAAMD,OAGxB,OACE,mCACGV,GACC,oBAAIY,UAAWC,IAAEC,YAAjB,SACGd,GACCA,EAAYe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACd,qBAAIP,UAAWC,IAAEO,gBAAjB,UACE,qBACEC,IACEJ,EAAY,0CAC2BA,GACnCK,IAENC,IAAKL,EACLN,UAAWC,IAAEW,uBAEf,oBAAGZ,UAAWC,IAAEY,SAAhB,UACGP,GAAc,UACf,uBACA,uBAAMN,UAAWC,IAAEa,cAAnB,kBACQP,GAAwB,iBAdGH","file":"static/js/cast.38865723.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastGallery\":\"Cast_CastGallery__1KZjp\",\"CastGalleryItem\":\"Cast_CastGalleryItem__3TUK_\",\"CastGalleryItemImage\":\"Cast_CastGalleryItemImage__2is2y\",\"NameCast\":\"Cast_NameCast__3WFDb\",\"CharacterCast\":\"Cast_CharacterCast__25jRy\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport s from \"./Cast.module.css\";\n\nimport defaultImage from \"../../images/defaultImg.jpg\";\nimport { getMovieDetailsCast } from \"../../MoviesAPI/MoviesAPI\";\n\nconst Cast = () => {\n  const [castDetails, setCastDetails] = useState(null);\n  const { movie_id } = useParams();\n\n  useEffect(() => {\n    getCastList();\n  }, [movie_id]);\n\n  const getCastList = () => {\n    getMovieDetailsCast(movie_id, \"credits\")\n      .then(({ cast }) => setCastDetails(cast))\n      .catch((e) => toast(e));\n  };\n\n  return (\n    <>\n      {castDetails && (\n        <ul className={s.CastGallery}>\n          {castDetails &&\n            castDetails.map(({ id, profile_path, name, character }) => (\n              <li className={s.CastGalleryItem} key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImage\n                  }\n                  alt={name}\n                  className={s.CastGalleryItemImage}\n                />\n                <p className={s.NameCast}>\n                  {name ? name : \"Someone\"}\n                  <br />\n                  <span className={s.CharacterCast}>\n                    as a {character ? character : \"Noname\"}\n                  </span>\n                </p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"sourceRoot":""}